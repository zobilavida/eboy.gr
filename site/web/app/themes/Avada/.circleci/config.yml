# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/php:7.1.5-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mysql:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "composer.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: sudo apt-get update
      - run: sudo apt-get install nodejs
      - run: sudo apt-get install npm
      # - run: sudo npm install npm@latest -g
      - run: sudo php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
      - run: sudo php composer-setup.php
      - run: sudo php -r "unlink('composer-setup.php');"
      - run: sudo php composer.phar self-update
      - run: sudo mv composer.phar /usr/local/bin/composer
      - run: sudo ln -s /usr/bin/nodejs /usr/bin/node
      - run: sudo npm cache clean -f
      - run: sudo npm install -g n
      - run: sudo n stable
      - run: sudo npm install -g eslint
      - run: sudo npm install -g eslint-config-wordpress
      - run: sudo npm i -g eslint

      - run: composer install -n --prefer-dist

      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.json" }}

      # run tests!
      - run: eslint ./assets/js/general/*.js
      - run: eslint ./assets/admin/js/avada-*.js
      - run: eslint ./assets/admin/js/fusion-*.js
      - run: eslint ./assets/admin/js/upload.js
      - run: vendor/bin/phpcs -p -s -v -n *.php --standard=./phpcs.ruleset.xml --extensions=php
      - run: vendor/bin/phpcs -p -s -v -n **/*.php --standard=./phpcs.ruleset.xml --extensions=php
      - run: vendor/bin/phpcs -p -s -v -n **/**/*.php --standard=./phpcs.ruleset.xml --extensions=php
      - run: vendor/bin/phpcs -p -s -v -n **/**/**/*.php --standard=./phpcs.ruleset.xml --extensions=php
      - run: vendor/bin/phpcs -p -s -v -n **/**/**/**/*.php --standard=./phpcs.ruleset.xml --extensions=php
